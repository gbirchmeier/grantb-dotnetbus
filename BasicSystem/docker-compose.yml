services:
  kafka1:
    container_name: dotnetbus-kafka
    image: apache/kafka:3.8.0
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERBROKER:PLAINTEXT,HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'HOST://localhost:9092,INTERBROKER://kafka1:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29092'
      KAFKA_LISTENERS: 'HOST://:9092,INTERBROKER://:19092,CONTROLLER://:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERBROKER'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'

  kafka-init:
    container_name: dotnetbus-init-kafka
    image: apache/kafka:3.8.0
    depends_on:
      - kafka1
    command:
      - /bin/sh
      - -c
      - |
        sh /opt/kafka/bin/kafka-topics.sh --bootstrap-server dotnetbus-kafka:19092 --list
        echo -e 'Creating kafka topics'
        sh /opt/kafka/bin/kafka-topics.sh --bootstrap-server dotnetbus-kafka:19092 --create --if-not-exists --topic trade-request --replication-factor 1 --partitions 1
        sh /opt/kafka/bin/kafka-topics.sh --bootstrap-server dotnetbus-kafka:19092 --create --if-not-exists --topic trade-status --replication-factor 1 --partitions 1
        echo -e 'Successfully created the following topics:'
        sh /opt/kafka/bin/kafka-topics.sh --bootstrap-server dotnetbus-kafka:19092 --list

#  mssql:
#    container_name: dotnetbus-mssql
#    image: mcr.microsoft.com/mssql/server:2022-latest
#    ports:
#      - 1433:1433
#    environment:
#      - ACCEPT_EULA=Y
#      - MSSQL_SA_PASSWORD=Password123#
#      - ENCRYPT=false
#
#  init-mssql:
#    container_name: dotnetbus-init-mssql
#    image: mcr.microsoft.com/mssql/server:2019-latest
#    depends_on:
#      - mssql
#    command: |
#      "
#      sh /opt/mssql-tools18/bin/sqlcmd -S mssql -U sa -P Password123# -q 'CREATE DATABASE DotNetBus;'
#      echo 'All done!';
#      "

# to use an env var or something: ${Sa_Password:Password123#}
